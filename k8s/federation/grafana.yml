apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: grafana-server
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      # Used to match pre-existing pods that may be affected during updates.
      run: grafana-server
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  # Pod template.
  template:
    metadata:
      labels:
        # Note: run=grafana-server should match a service config with a
        # public IP and port so that it is publically accessible.
        run: grafana-server
    spec:
      containers:
      # Check https://hub.docker.com/r/grafana/grafana/tags/ for the current
      # stable version.
      - image: grafana/grafana:4.2.0
        name: grafana-server
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana-secrets
              key: admin-password
        - name: GF_SERVER_DOMAIN
          # The public facing domain name used to access grafana from a browser.
          # The domain value is used in alert URLs generated by Grafana.
          valueFrom:
            configMapKeyRef:
              name: grafana-env
              key: domain
        - name: GF_EXTERNAL_IMAGE_STORAGE_PROVIDER
          value: s3
        - name: GF_EXTERNAL_IMAGE_STORAGE_S3_BUCKET_URL
          valueFrom:
            secretKeyRef:
              name: grafana-secrets
              key: s3-bucket-url
        - name: GF_EXTERNAL_IMAGE_STORAGE_S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: grafana-secrets
              key: s3-access-key
        - name: GF_EXTERNAL_IMAGE_STORAGE_S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: grafana-secrets
              key: s3-secret-key
        ports:
          - containerPort: 3000
        resources:
          requests:
            memory: "1Gi"
            cpu: "200m"
        # TODO: add support for SSL certificates, so logins are secure.
        volumeMounts:
        # Default configs place an sqlite3 database in /var/lib/grafana
        - mountPath: /var/lib/grafana
          name: grafana-storage
        # /etc/grafana/* should contain the M-Lab Grafana configs.
        - mountPath: /etc/grafana
          name: grafana-config
      # Disks created manually, can be named here explicitly using
      # gcePersistentDisk instead of the persistentVolumeClaim.
      volumes:
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: auto-grafana-disk0
      - name: grafana-config
        configMap:
          name: grafana-config
